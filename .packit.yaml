# See the documentation for more information:
# https://packit.dev/docs/configuration/

srpm_build_deps: [rpkg, wget, just]
actions:
  get-current-version:
    - bash -c "tmp=$(mktemp -u); rpkg spec -p >$tmp && rpmspec -q --queryformat \"%{VERSION}\n\" $tmp| head -n1"
  post-upstream-clone:
    - bash -xc "if grep -oq '{{{ git' *.spec; then rpkg spec --sources --outdir .; fi"
  fix-spec-file:
    # Download sources
    - just packit _fetch_sources
notifications:
  failure_comment:
    message: |
      Build failed:
        commit_sha: {commit_sha}
        logs_url: {logs_url}
        packit_dashboar: {packit_dashboard_url}
_:
  packages-per-project:
    # Generated by add_specs.sh
    packages: &packages-packages
      ublue-polkit-rules: &pkg-ublue-polkit-rules
        paths: ["./packages/ublue-polkit-rules"]
        specfile_path: "ublue-polkit-rules.spec"
      uupd: &pkg-uupd
        paths: ["./packages/uupd"]
        specfile_path: "uupd.spec"
      ublue-motd: &pkg-ublue-motd
        paths: ["./packages/ublue-motd"]
        specfile_path: "ublue-motd.spec"
      ublue-os-luks: &pkg-ublue-os-luks
        paths: ["./packages/ublue-os-luks"]
        specfile_path: "ublue-os-luks.spec"
      ublue-os-signing: &pkg-ublue-os-signing
        paths: ["./packages/ublue-os-signing"]
        specfile_path: "ublue-os-signing.spec"
      ublue-brew: &pkg-ublue-brew
        paths: ["./packages/ublue-brew"]
        specfile_path: "ublue-brew.spec"
      ublue-os-just: &pkg-ublue-os-just
        paths: ["./packages/ublue-os-just"]
        specfile_path: "ublue-os-just.spec"
      ublue-fastfetch: &pkg-ublue-fastfetch
        paths: ["./packages/ublue-fastfetch"]
        specfile_path: "ublue-fastfetch.spec"
      kcm_ublue: &pkg-kcm_ublue
        paths: ["./packages/kcm_ublue"]
        specfile_path: "kcm_ublue.spec"
      ublue-os-media-automount-udev: &pkg-ublue-os-media-automount-udev
        paths: ["./packages/ublue-os-media-automount-udev"]
        specfile_path: "ublue-os-media-automount-udev.spec"
      ublue-bling: &pkg-ublue-bling
        paths: ["./packages/ublue-bling"]
        specfile_path: "ublue-bling.spec"
      ublue-recipes: &pkg-ublue-recipes
        paths: ["./packages/ublue-recipes"]
        specfile_path: "ublue-recipes.spec"
      ublue-os-update-services: &pkg-ublue-os-update-services
        paths: ["./packages/ublue-os-update-services"]
        specfile_path: "ublue-os-update-services.spec"
      bluefin: &pkg-bluefin
        paths: ["./packages/bluefin"]
        specfile_path: "bluefin.spec"
      ublue-rebase-helper: &pkg-ublue-rebase-helper
        paths: ["./packages/ublue-rebase-helper"]
        specfile_path: "ublue-rebase-helper.spec"
      ublue-os-udev-rules: &pkg-ublue-os-udev-rules
        paths: ["./packages/ublue-os-udev-rules"]
        specfile_path: "ublue-os-udev-rules.spec"
      ublue-setup-services: &pkg-ublue-setup-services
        paths: ["./packages/ublue-setup-services"]
        specfile_path: "ublue-setup-services.spec"
      aurora: &pkg-aurora
        paths: ["./packages/aurora"]
        specfile_path: "aurora.spec"
    # Generated by add_specs.sh
    staging: &packages-staging
      gnome-shell-extension-supergfxctl-gex:
        &pkg-gnome-shell-extension-supergfxctl-gex
        paths: ["./staging/gnome-shell-extension-supergfxctl-gex"]
        specfile_path: "gnome-shell-extension-supergfxctl-gex.spec"
      gnome-shell-extension-gsconnect: &pkg-gnome-shell-extension-gsconnect
        paths: ["./staging/gnome-shell-extension-gsconnect"]
        specfile_path: "gnome-shell-extension-gsconnect.spec"
      devpod: &pkg-devpod
        paths: ["./staging/devpod"]
        specfile_path: "devpod.spec"
      gnome-software: &pkg-gnome-software
        paths: ["./staging/gnome-software"]
        specfile_path: "gnome-software.spec"
      scx-scheds: &pkg-scx-scheds
        paths: ["./staging/scx-scheds"]
        specfile_path: "scx-scheds.spec"
      fwupd: &pkg-fwupd
        paths: ["./staging/fwupd"]
        specfile_path: "fwupd.spec"
      gnome-settings-daemon: &pkg-gnome-settings-daemon
        paths: ["./staging/gnome-settings-daemon"]
        specfile_path: "gnome-settings-daemon.spec"
      gnome-shell: &pkg-gnome-shell
        paths: ["./staging/gnome-shell"]
        specfile_path: "gnome-shell.spec"
      nautilus-open-any-terminal: &pkg-nautilus-open-any-terminal
        paths: ["./staging/nautilus-open-any-terminal"]
        specfile_path: "nautilus-open-any-terminal.spec"
      gnome-shell-extension-caffeine: &pkg-gnome-shell-extension-caffeine
        paths: ["./staging/gnome-shell-extension-caffeine"]
        specfile_path: "gnome-shell-extension-caffeine.spec"
      topgrade: &pkg-topgrade
        paths: ["./staging/topgrade"]
        specfile_path: "topgrade.spec"
      rpm-ostree: &pkg-rpm-ostree
        paths: ["./staging/rpm-ostree"]
        specfile_path: "rpm-ostree.spec"
jobs:
  # Run a rpm build for that specific PR in an ephemeral namespace.
  # Used for PR checks and for ephemeral rpm testing.
  - job: copr_build
    trigger: ignore # pull_request
    enable_net: true
    targets:
      # See https://packit.dev/docs/configuration#aliases
      - fedora-41
      - fedora-latest-stable # the latest released Fedora version
      - fedora-latest # the last versioned Fedora (not a Rawhide), regardless if it's released or still under development.
      - epel-10
  # Run rpm builds for a non-ephemeral namespace.
  # Used for triggering builds in our repo when PR
  # merges to main branch.
  - job: copr_build
    trigger: ignore # commit
    branch: main
    owner: "@ublue-os"
    # TODO (@Zeglius Fri Apr 11 2025): Switch off of testing when we are sure that
    # packages get published on PR merge.
    project: packages-test_packit
    packages:
      <<: *packages-packages
  # # Generated by add_specs.sh
  # - job: copr_build
  #   trigger: commit
  #   branch: main
  #   owner: "@ublue-os"
  #   project: staging-test_packit
  #   enable_net: true
  #   packages:
  #     <<: *packages-staging
packages:
  <<: [*packages-packages, *packages-staging] # Generated by add_specs.sh
  uupd:
    <<: *pkg-uupd
    enable_net: true # See https://packit.dev/docs/configuration/upstream/copr_build#optional-parameters
